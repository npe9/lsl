FiniteMap(D, R): trait
  % A Map[D, R] is a map from D's to R's.
  introduces
    {}:                      -> Map[D, R]
    update:  Map[D, R], D, R -> Map[D, R]
    apply:   Map[D, R], D    -> R
    defined: Map[D, R], D    -> Bool
  asserts 
    sort Map[D, R] generated by {}, update
    sort Map[D, R] partitioned by apply, defined
    \forall m: Map[D, R], d, d1, d2: D, r: R
      apply(update(m, d2, r), d1) =
        (if d1 = d2 then r else apply(m, d1));
      ~defined({}, d);
      defined(update(m, d2, r), d1) <=>
        d1 = d2 \/ defined(m, d1)
  implies
    Array1(R, D, Map for Array,
           update for assign, apply for __[__])
    converts apply, defined
      exempting \forall d: D apply({}, d)
