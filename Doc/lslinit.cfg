` FILE:		lslinit.cfg
` PURPOSE:	Context-free grammar for the Larch Shared Language Init
`		Files
` METHOD:	This grammar defines the format of the LSL Init File.
`		It is processed to define character classes,
`		symbol classes, and synonyms before the LSL files are
`		processed.
`
` INIT RULES:	The extensions on each line are effective on all subsequent
`		lines.
`
`               Only singleChars can be reclassified as idChar, opChar,
`		extensionChar, singleChar, and whiteChar.  ',', ':', '('
`		and ')' are no longer singlechar.  They are now classified
`		as permChar. A singleChar can only be
`		reclassified once (even if reclassified again as
`		singleChar).
`
`		Any characters can be classified as an endCommentCharacter,
`		but only once.
`
`		When a singleChar is classified an the extensionChar, the
`		previous extensionChar is reclassified as a singleChar and
`		can be reclassified.
`
`               Only unassigned tokens can be assigned
`		as quantifierSym, logicalOp, eqOp, equationSym, eqSepSym,
`		selectSym, openSym, sepSym, closeSym, simpleId, mapSym,
`		markerSym, and commentSym.
`
`		Only unnassigned tokens can appear as oldToken for synonym
`		definitions.
`
` CONVENTIONS:  Reserved words are in ALL CAPS.  The actual reserved words
`		only have the first letter of each word after the first
`		capitalized.  e.g.,  IDCHAR is "idChar", SYNONYM is
`		"synonym".
`		The production RHS's are separated by a new line.
`               EOL - the end-of-line terminal character.
`               EOF - the end-of-file terminal character.
` MODIFICATIONS:Wild at Digital -- 90.07.31 -- transcribed from 2.3
`		Wild at Digital -- 90.08.20 -- allow EOL on line alone
`		Wild at Digital -- 90.08.27 -- fix redef on line errors
initFile
    initLines EOF 

initLines

    initLine 
    initLines initLine

initLine
    EOL
    classification EOL

classification
    charClass
    tokenClass
    synClass

charClass
    ENDCOMMENTCHAR endCommentChars
    IDCHAR idChars
    OPCHAR opChars
    EXTENSIONCHAR extensionChar
    SINGLECHAR singChars
    WHITECHAR whiteChars

endCommentChars
    endCommentChar
    endCommentChars endCommentChar

idChars
    idChar
    idChars idChar

opChars
    opChar
    opChars opChar

extensionChar
    singleChar

singChars
    singChar
    singChars singChar

whiteChars
    whiteChar
    whiteChars whiteChar

endCommentChar
    commentChar
    
idChar
    singleChar
    
opChar
    singleChar
    
singChar
    singleChar
    
whiteChar
    singleChar

tokenClass
    QUANTIFIERSYM quantifierSymToks
    LOGICALOP logicalOpToks
    EQOP eqOpToks
    EQUATIONSYM equationSymToks
    EQSEPSYM eqSepSymToks
    SELECTSYM selectSymToks
    OPENSYM openSymToks
    SEPSYM sepSymToks
    CLOSESYM closeSymToks
    SIMPLEID simpleIdToks
    MAPSYM mapSymToks
    MARKERSYM markerSymToks
    COMMENTSYM commentSymToks

quantifierSymToks
    quantifierSymTok
    quantifierSymToks quantifierSymTok

logicalOpToks
    logicalOpTok
    logicalOpToks logicalOpTok

eqOpToks
    eqOpTok
    eqOpToks eqOpTok

equationSymToks
    equationSymTok
    equationSymToks equationSymTok

eqSepSymToks
    eqSepSymTok
    eqSepSymToks eqSepSymTok

selectSymToks
    selectSymTok
    selectSymToks selectSymTok

openSymToks
    openSymTok
    openSymToks openSymTok

sepSymToks
    sepSymTok
    sepSymToks sepSymTok

closeSymToks
    closeSymTok
    closeSymToks closeSymTok

simpleIdToks
    simpleIdTok
    simpleIdToks simpleIdTok 

mapSymToks
    mapSymTok
    mapSymToks mapSymTok

markerSymToks
    markerSymTok
    markerSymToks markerSymTok

commentSymToks
    commentSymTok
    commentSymToks commentSymTok

quantifierSymTok
    token

logicalOpTok
    token

eqOpTok
    token

equationSymTok
    token

eqSepSymTok
    token

selectSymTok
    token

openSymTok
    token

sepSymTok
    token

closeSymTok
    token

simpleIdTok
    token

mapSymTok
    token

markerSymTok
    token

commentSymTok
    token

synClass
    SYNONYM oldToken newToken

oldToken
    token

newToken
    token

