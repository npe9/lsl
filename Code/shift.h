/*
**
**	Copyright (c) MIT, 1990, 1991
**	All Rights Reserved.  Unpublished rights reserved under the copyright 
**	laws of the United States.
**
**++
**  FACILITY:	LSL Checker
**
**  MODULE DESCRIPTION:
**
**  	FILENAME:   shift.h
**
**	PURPOSE:    Interface to routines that stack and unstack tokens from 
**		    shift/reduce sequence generated by parser
**
**
**  MODIFICATION HISTORY:
**
**  X0.1-1	WM	90.04.20	Original
**  X0.1-2	JPW	90.08.17	Add IsEmptyShiftStack for init
**  X0.1-3	GAF	91.01.22	Allow shifting of nonterminals
**  X0.1-4	GAF	91.03.27	Add LSLGenTopmostToken, and sort
**					routines into alphabetical order
**  X0.1-5	GAF	91.04.01	Change LSLGenTopmostToken to take an
**					integer count, indicating that we want
**					the Nth from the top.
**  X0.1-6	SJG	93.08.03	Remove nonterminals, LSLGenTopmostToken
**  [@modification history entry@]...
**--
*/


/*
**
**  MACRO DEFINITIONS (none)
**
*/

/*
**
**  TYPEDEFS (none)
**
*/

/*
**
**  FUNCTION PROTOTYPES
**
*/

extern bool		LSLGenIsEmptyShiftStack(void);
extern void		LSLGenPopShiftStack(void);
extern void		LSLGenShift(LSLToken tok);
extern LSLToken		LSLGenTopmostToken(int n);
extern LSLToken		LSLGenTopPopShiftStack(void);
extern LSLToken		LSLGenTopShiftStack(void);

extern void		LSLGenInit(void);
extern void		LSLGenReset(void);
extern void		LSLGenCleanup(void);


/*
**
**  EXTERNAL VARIABLES (none)
**
*/

